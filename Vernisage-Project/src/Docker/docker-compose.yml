version: '3'
services:

  db:
    image: mysql:latest
    restart: always
    container_name: MYSQL
    environment:
      MYSQL_ROOT_PASSWORD: Pr!m4bAl13rina
      MYSQL_DATABASE: hist_temp_ger
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    ports: ['3307:3306']
    healthcheck:
      #test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p Pr!m4bAl13rina"]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55
    networks:
      - monitoring

  python:
    image: pythonscript
    container_name: PYTHON
    build:
      context: ../..
      dockerfile: data/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
       - monitoring
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
    healthcheck:
    #test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD"
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p Pr!m4bAl13rina" ]
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 55


  dwd-exporter:
    container_name: DWD-exporter
    build:
      context: ../..
      dockerfile: src/Docker/Dockerfile
    ports:
            - "9110:9110"
    restart: unless-stopped
    networks:
            - monitoring

  prometheus:
    image: prom/prometheus
    container_name: Prometheus
    ports:
      - 9090:9090
    volumes:
      - ../Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring


  grafana:
     image: grafana/grafana
     container_name: Grafana
     ports:
       - 3000:3000
     environment:
       - GF_SECURITY_ADMIN_USER=MyLittleEdi3978
       - GF_SECURITY_ADMIN_PASSWORD=HappyHippo
     networks:
       - monitoring

networks:
  monitoring:
    driver: bridge
  bank:
    driver: bridge
    #external: true - bringt nur was wenn man schon ein passendes netzwerk hat. auskommentiert erstellt e
